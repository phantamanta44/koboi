buildscript {
    ext.kotlin_version = '1.2.30'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'io.github.phantamanta44.koboi'
version '1.0.0-SNAPSHOT'

apply plugin: 'kotlin'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'com.xenomachina:kotlin-argparser:2.0.7'
    compile 'org.jogamp.gluegen:gluegen-rt:2.3.2'
    compile 'org.jogamp.jogl:jogl-all:2.3.2'
    compile 'net.java.jinput:jinput:2.0.5'

    def os = System.getProperty("os.name").toLowerCase()
    if (os.contains("windows")) {
        os = "windows"
    } else if (os.contains("osx") || os.contains("macos")) {
        os = "macosx"
    } else if (os.contains("linux")) {
        os = "linux"
    } else if (os.contains("solaris")) {
        os = "solaris"
    }
    def arch = System.getProperty("os.arch")
    compile "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-$os-$arch"
    compile "org.jogamp.jogl:jogl-all:2.3.2:natives-$os-$arch"

    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}
compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}